{"version":3,"sources":["components/Cards/CardBody/CardBody.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/CardBody/CardBody.module.css","App.module.css","images/image.png","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["CardBody","card","name","value","date","bottom","Fragment","Grid","item","component","Card","xs","md","className","cx","styles","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","typographyPadding","Date","toDateString","Cards","data","confirmed","deaths","recovered","lastUpdate","cardList","map","index","key","container","spacing","justify","url","fetchData","country","a","formattedUrl","axios","get","console","log","fetchDailyData","dailyData","total","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","countryHandler","countryList","setCountryList","FormControl","style","formControl","NativeSelect","onChange","App","props","handleCountyChangeEvent","event","updateStatusWithData","target","setState","state","this","src","logoImage","alt","logo","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dcc3f261.chunk.js","sourcesContent":["import React from 'react';\r\nimport cx from 'classnames';\r\n// import material UI elements\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n// import styles\r\nimport styles from './CardBody.module.css';\r\n\r\n// import react count\r\nimport CountUp from 'react-countup';\r\n\r\nfunction CardBody({ card: { name, value, date, bottom } }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        md={3}\r\n        className={cx(styles.card, styles[name])}\r\n      >\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start={0} end={value} duration={2.5} separator=\",\" />\r\n          </Typography>\r\n          <Typography\r\n            className={styles.typographyPadding}\r\n            color=\"textSecondary\"\r\n          >\r\n            {new Date(date).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\">{bottom}</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CardBody;\r\n","import React from 'react';\r\n// import material UI elements\r\nimport { Grid } from '@material-ui/core';\r\n// import styles\r\nimport styles from './Cards.module.css';\r\nimport CardBody from './CardBody/CardBody';\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading ...';\r\n  }\r\n\r\n  const cards = [\r\n    {\r\n      name: 'Infected',\r\n      value: confirmed.value,\r\n      date: lastUpdate,\r\n      bottom: ' Number of active cases of COVID-19',\r\n    },\r\n    {\r\n      name: 'Recovered',\r\n      value: recovered.value,\r\n      date: lastUpdate,\r\n      bottom: ' Number of recoveries from COVID-19',\r\n    },\r\n    {\r\n      name: 'Deaths',\r\n      value: deaths.value,\r\n      date: lastUpdate,\r\n      bottom: ' Number of deaths caused by COVID-19',\r\n    },\r\n  ];\r\n\r\n  const cardList = cards.map((card, index) => (\r\n    <CardBody key={index} card={card} />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {cardList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let formattedUrl = url;\r\n  if (country) {\r\n    formattedUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { deaths, recovered, confirmed, lastUpdate },\r\n    } = await axios.get(formattedUrl);\r\n\r\n    return { deaths, recovered, confirmed, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map(({ name }) => name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import char js\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n// import API\r\nimport { fetchDailyData } from '../../api';\r\n// import styles\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // self call function\r\n    (async () => {\r\n      // set dailyData using setter\r\n      setDailyData(await fetchDailyData());\r\n    })();\r\n  }, []);\r\n\r\n  // create line chart\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'confirmed',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Confirmed', 'Recovered', 'deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.6)',\r\n              'rgba(0, 255, 0, 0.6)',\r\n              'rgba(255, 0, 0, 0.6)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, NativeSelect } from '@material-ui/core';\r\n// styles import\r\nimport style from './CountryPicker.module.css';\r\n// api import\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ countryHandler }) => {\r\n  const [countryList, setCountryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCountryList(await fetchCountries());\r\n    })();\r\n  }, []);\r\n\r\n  // create country list\r\n  const countries = countryList.map((country, index) => (\r\n    <option key={index} value={country}>\r\n      {country}\r\n    </option>\r\n  ));\r\n\r\n  return countryList.length ? (\r\n    <FormControl className={style.formControl}>\r\n      <NativeSelect onChange={countryHandler}>\r\n        <option value=\"\">Global</option>\r\n        {countries}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react';\r\n\r\n//import css\r\nimport styles from './App.module.css';\r\n\r\n// import components\r\nimport { Cards, Chart, CountryPicker } from './components';\r\n\r\n//import api\r\nimport { fetchData } from './api';\r\n\r\n//import images\r\nimport { logoImage } from './images';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: {},\r\n      country: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updateStatusWithData();\r\n  }\r\n\r\n  handleCountyChangeEvent = async (event) => {\r\n    await this.updateStatusWithData(event.target.value);\r\n  };\r\n\r\n  updateStatusWithData = async (country) => {\r\n    if (!country) {\r\n      this.setState({\r\n        data: await fetchData(),\r\n        country: '',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data: await fetchData(country),\r\n        country,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={logoImage} alt=\"COVID-19\" className={styles.logo} />\r\n        <Cards data={data} />\r\n        <CountryPicker countryHandler={this.handleCountyChangeEvent} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import component\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardBody_card__14DsG\",\"Infected\":\"CardBody_Infected__5o860\",\"Recovered\":\"CardBody_Recovered__3l_1W\",\"Deaths\":\"CardBody_Deaths__17aHT\",\"typographyPadding\":\"CardBody_typographyPadding__WIAAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3s8b6\",\"logo\":\"App_logo__3E5j8\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2NU-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1FBjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__coDJH\"};"],"sourceRoot":""}